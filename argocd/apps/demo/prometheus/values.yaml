prometheusOperator:
  enabled: true

grafana:
  enabled: false

alertmanager:
  enabled: false

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    additionalScrapeConfigs:
      - job_name: opencost
        honor_labels: true
        scrape_interval: 1m
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        dns_sd_configs:
        - names:
          - opencost-demo.opencost
          type: 'A'
          port: 9003
      - job_name: opencost-dcgm-exporter
        honor_labels: true
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app, __meta_kubernetes_pod_label_app_kubernetes_io_component, __meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: (?i)(.*dcgm-exporter.*|.*dcgm-exporter.*|.*dcgm-exporter.*)

# for the prometheus ingress helm chart
hosts:
  - url: demo-prometheus.infra.opencost.io
    paths:
      - path: /
        backend:
          name: prometheus-kube-prometheus-prometheus
          port: 8080
tls:
  - hosts:
      - demo-prometheus.infra.opencost.io
    secretName: testsecret-tls
ingressClassName: "nginx"
annotations:
  kubernetes.io/ingress.class: nginx
  kubernetes.io/tls-acme: "true"
  cert-manager.io/cluster-issuer: "letsencrypt-demo"
apiVersion: networking.k8s.io/v1